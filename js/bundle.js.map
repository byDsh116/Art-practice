{"version":3,"file":"bundle.js","mappings":";;;;;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,uCAAuC,UAAU,MAAM,SAAS;AAChE,8DAA8D,WAAW;AACzE,4DAA4D,WAAW;AACvE;AACA;AACA;AACA,sEAAsE,WAAW;AACjF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;AAIA,QAAQ;;AAER;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA,+CAA+C,IAAI,YAAY,WAAW;AAC1E;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;;AAE7C,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA,yDAAyD,OAAO;;AAEhE;AACA,0CAA0C,WAAW;AACrD,cAAc;AACd;AACA;AACA;AACA;;AAEA,SAAS;AACT,KAAK;;AAEL,CAAC","sources":["webpack:///./js/script.js"],"sourcesContent":["window.addEventListener('DOMContentLoaded', function () {\n\n    let tabs = document.querySelectorAll('.tabheader__item'),\n        tabsContent = document.querySelectorAll('.tabcontent'),\n        tabsParent = document.querySelector('.tabheader__items');\n\n    function hideTabContent() {\n        tabsContent.forEach(item => {\n            item.classList.add('hide');\n            item.classList.remove('show', 'fade');\n        })\n\n        tabs.forEach(item => {\n            item.classList.remove('tabheader__item_active');\n        });\n    }\n\n    function showTabContent(i = 0) {\n        tabsContent[i].classList.add('show', 'fade');\n        tabsContent[i].classList.remove('hide');\n        tabs[i].classList.add('tabheader__item_active');\n    }\n\n    hideTabContent();\n    showTabContent();\n\n    tabsParent.addEventListener('click', (event) => {\n        const target = event.target\n\n        if (target && target.classList.contains('tabheader__item')) {\n            tabs.forEach((item, i) => {\n                if (target == item) {\n                    hideTabContent();\n                    showTabContent(i)\n                }\n            })\n        }\n    })\n    const deadLine = '2022-12-15'\n\n    function getTimerRemaining(endTime) {\n        let days, hours, minutes, seconds\n        const t = Date.parse(endTime) - Date.parse(new Date())\n\n        if (t <= 0) {\n            days = 0\n            hours = 0\n            minutes = 0\n            seconds = 0\n        } else {\n            days = Math.floor(t / (1000 * 60 * 60 * 24)),\n                hours = Math.floor((t / (1000 * 60 * 60) % 24)),\n                minutes = Math.floor((t / 1000 / 60) % 60),\n                seconds = Math.floor((t / 1000) % 60);\n        }\n\n        return {\n            'total': t,\n            'days': days,\n            'hours': hours,\n            'minutes': minutes,\n            'seconds': seconds\n        }\n    }\n\n    function getZero(num) {\n        if (num >= 0 && num < 10) {\n            return `0${num}`\n        } else {\n            return num\n        }\n    }\n\n    function setClock(selector, endtime) {\n        const timer = document.querySelector(selector),\n            days = document.querySelector('#days'),\n            hours = document.querySelector('#hours'),\n            minutes = document.querySelector('#minutes'),\n            seconds = document.querySelector('#seconds'),\n            timeInterval = setInterval(updateClock, 1000)\n\n        updateClock()\n\n        function updateClock() {\n            const t = getTimerRemaining(endtime)\n\n            days.innerHTML = getZero(t.days)\n            hours.innerHTML = getZero(t.hours)\n            minutes.innerHTML = getZero(t.minutes)\n            seconds.innerHTML = getZero(t.seconds)\n\n            if (t.total <= 0) {\n                clearInterval(timeInterval)\n            }\n\n        }\n    }\n\n    setClock('.timer', deadLine)\n\n    // Modal\n\n    const modalTrigger = document.querySelectorAll('[data-modal]'),\n        modal = document.querySelector('.modal'),\n        modalCloseBtn = document.querySelector('[data-close]');\n\n    modalTrigger.forEach(btn => {\n        btn.addEventListener('click', openModal);\n    });\n\n    function closeModal() {\n        modal.classList.add('hide');\n        modal.classList.remove('show');\n        document.body.style.overflow = '';\n    }\n\n    function openModal() {\n        modal.classList.add('show');\n        modal.classList.remove('hide');\n        document.body.style.overflow = 'hidden';\n        clearInterval(modalTimerId);\n    }\n\n    modalCloseBtn.addEventListener('click', closeModal);\n\n    modal.addEventListener('click', (e) => {\n        if (e.target === modal) {\n            closeModal();\n        }\n    });\n\n    document.addEventListener('keydown', (e) => {\n        if (e.code === \"Escape\" && modal.classList.contains('show')) {\n            closeModal();\n        }\n    });\n\n    const modalTimerId = setTimeout(openModal, 3000);\n\n    function showModalByScroll() {\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n            openModal();\n            window.removeEventListener('scroll', showModalByScroll);\n        }\n    }\n    window.addEventListener('scroll', showModalByScroll);\n\n    class MenuCard {\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\n            this.src = src\n            this.alt = alt\n            this.title = title\n            this.descr = descr\n            this.price = price\n            this.classes = classes\n            this.parent = document.querySelector(parentSelector)\n            this.transfer = 27 //???\n            this.change() //????\n        }\n\n        change() {  //?????\n            this.price = this.price * this.transfer  //?????\n        }\n\n        render() {\n            const element = document.createElement('div')\n            if (this.classes.length === 0) {\n                this.element = 'menu__item'\n                element.classList.add(this.element)\n            } else {\n                this.classes.forEach(className => element.classList.add(className))\n            }\n            element.innerHTML = `\n                        <div class=\"menu__item\">\n                            <img src=${this.src} alt=${this.alt}> \n                            <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n                            <div class=\"menu__item-descr\">${this.descr}</div>\n                            <div class=\"menu__item-divider\"></div>\n                            <div class=\"menu__item-price\">\n                                <div class=\"menu__item-cost\">Цена:</div>\n                                <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\n                            </div>\n                        </div>\n    `\n            this.parent.append(element)\n        }\n    }\n\n    new MenuCard(\n        'https://avatars.mds.yandex.net/get-mpic/4420830/img_id4944321220846543068.jpeg/orig',\n        'painting',\n        'Живопись',\n        'Собрание картин от классики до современного искусства',\n        '4',\n        '.menu .container',\n        'menu__item',\n\n\n    ).render()\n\n    new MenuCard(\n        'https://i.pinimg.com/236x/5e/99/46/5e9946a28f551beb610db5be0b856bc7.jpg',\n        'architecture',\n        'Архитектура',\n        '',\n        'im price',\n        '.menu .container',\n        'menu__item',\n\n    ).render()\n\n\n    new MenuCard(\n        'https://i.pinimg.com/236x/a3/e1/6c/a3e16c1a56c38868b5aac5e654fa9e22.jpg',\n        'im art',\n        'Арты на основе классики',\n        'im descr',\n        '4',\n        '.menu .container',\n        'menu__item',\n\n\n    ).render()\n\n\n\n    // });\n\n    // TIMER \n\n\n\n    // Forms\n\n    const forms = document.querySelectorAll('form');\n    const message = {\n        loading: 'img/form/spinner.svg',\n        success: 'Спасибо! Скоро мы с вами свяжемся',\n        failure: 'Что-то пошло не так...'\n    };\n\n    forms.forEach(item => {\n        bindPostData(item);\n    });\n\n    const postData = async (url, data) => {\n        let res = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: data\n        });\n\n        return await res.json();\n    };\n\n    async function getResource(url) {\n        let res = await fetch(url);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    function bindPostData(form) {\n        form.addEventListener('submit', (e) => {\n            e.preventDefault();\n\n            let statusMessage = document.createElement('img');\n            statusMessage.src = message.loading;\n            statusMessage.style.cssText = `\n            display: block;\n            margin: 0 auto;\n        `;\n            form.insertAdjacentElement('afterend', statusMessage);\n\n            const formData = new FormData(form);\n\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\n\n            postData('http://localhost:3000/requests', json)\n                .then(data => {\n                    console.log(data);\n                    showThanksModal(message.success);\n                    statusMessage.remove();\n                }).catch(() => {\n                    showThanksModal(message.failure);\n                }).finally(() => {\n                    form.reset();\n                });\n        });\n    }\n\n    function showThanksModal(message) {\n        const prevModalDialog = document.querySelector('.modal__dialog');\n\n        prevModalDialog.classList.add('hide');\n        openModal();\n\n        const thanksModal = document.createElement('div');\n        thanksModal.classList.add('modal__dialog');\n        thanksModal.innerHTML = `\n        <div class=\"modal__content\">\n            <div class=\"modal__close\" data-close>×</div>\n            <div class=\"modal__title\">${message}</div>\n        </div>\n    `;\n        document.querySelector('.modal').append(thanksModal);\n        setTimeout(() => {\n            thanksModal.remove();\n            prevModalDialog.classList.add('show');\n            prevModalDialog.classList.remove('hide');\n            closeModal();\n        }, 4000);\n    }\n\n    fetch('http://localhost:3000/menu')\n        .then(data => data.json())\n        .then(res => console.log(res))\n\n    // slider\n\n    let slideIndex = 1;\n    let offset = 0\n\n    const slides = document.querySelectorAll('.offer__slide'),\n        slider = document.querySelector('.offer__slider'),\n        prev = document.querySelector('.offer__slider-prev'),\n        next = document.querySelector('.offer__slider-next'),\n        total = document.querySelector('#total'),\n        current = document.querySelector('#current'),\n        slidesWrapper = document.querySelector('.offer__slider-wrapper'),\n        slidesField = document.querySelector('.offer__slider-inner'),\n        width = window.getComputedStyle(slidesWrapper).width;\n\n    if (slides.length < 10) {\n        total.textContent = `0${slides.length}`\n        current.textContent = `0${slideIndex}`\n\n    } else {\n        total.textContent = slides.length;\n        current.textContent = slideIndex\n    }\n\n    slidesField.style.width = 100 * slides.length + '%'\n    slidesField.style.display = 'flex'\n    slidesField.style.transition = '0.5s all'\n\n    slidesWrapper.style.overflow = 'hidden'\n\n    slides.forEach(slide => {\n        slide.style.width = width\n    })\n\n    slider.style.position = 'relative'\n\n    const indicators = document.createElement('ol'),\n        dots = []\n    indicators.classList.add('carousel-indicators')\n    slider.append(indicators)\n\n    for (let i = 0; i < slides.length; i++) {\n        const dot = document.createElement('li')\n        dot.setAttribute('data-slide-to', i + 1)\n        dot.style.cssText = `\n        box-sizing: content-box;\n        flex: 0 1 auto;\n        width: 30px;\n        height: 6px;\n        margin-right: 3px;\n        margin-left: 3px;\n        cursor: pointer;\n        background-color: #fff;\n        background-clip: padding-box;\n        border-top: 10px solid transparent;\n        border-bottom: 10px solid transparent;\n        opacity: .5;\n        transition: opacity .6s ease;\n        `\n        if (i == 0) { // ограничить доступ к 0му элементу\n            dot.style.opacity = 1\n        }\n        indicators.append(dot)\n        dots.push(dot)\n    }\n\n    const getOffset = (isForward) => {\n\n        if (isForward) {\n            return +width.replace(/\\D/g, '') * (slides.length - 1)\n        } else {\n          return +width.replace(/\\D/g, '')\n        }\n    }\n    \n    next.addEventListener('click', () => {\n        if (offset == (getOffset(true))) {\n            offset = 0\n        } else {\n            offset += getOffset(false)\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`\n\n        if (slideIndex == slides.length) {\n            slideIndex = 1\n        } else {\n            slideIndex++\n        }\n\n        if (slideIndex < 10) {\n            current.textContent = `0${slideIndex}`\n        } else {\n            current.textContent = slideIndex\n        }\n\n        dots.forEach(dot => dot.style.opacity = '.5')\n        dots[slideIndex - 1].style.opacity = 1\n    })\n\n    prev.addEventListener('click', () => {\n        if (offset == 0) {\n            offset = getOffset(true)\n        } else {\n            offset -= getOffset(false)\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`\n\n        if (slideIndex == 1) {\n            slideIndex = slides.length\n        } else {\n            slideIndex--\n        }\n\n\n        if (slides.length < 10) {\n            current.textContent = `0${slideIndex}`\n        } else {\n            current.textContent = slideIndex\n        }\n        dots.forEach(dot => dot.style.opacity = '.5')\n        dots[slideIndex - 1].style.opacity = 1\n    })\n\n    dots.forEach(dot => {\n        dot.addEventListener('click', (e) => {\n            const slideTo = e.target.getAttribute('data-slide-to')\n            slideIndex = slideTo\n            offset = getOffset(true)\n\n            slidesField.style.transform = `translateX(-${offset}px)`\n\n            if (slides.length < 10) {\n                current.textContent = `0${slideIndex}`\n            } else {\n                current.textContent = slideIndex\n            }\n            dots.forEach(dot => dot.style.opacity = '.5')\n            dots[slideIndex - 1].style.opacity = 1\n\n        })\n    })\n\n});\n\n\n\n\n"],"names":[],"sourceRoot":""}